/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Test;
import static org.junit.Assert.*;

public class LibraryTest {
    @Test
    public void shouldReturnAverage() {
        List<float> numbers = Arrays.asList(1f, 2f, 3f, 4f);
        Library classUnderTest = new Library();

        float actual = classUnderTest.average(numbers);

        assertTrue(actual == 2.5f);
    }

    @Test
    public void shouldLoginWithValidPassword() {
        Library classUnderTest = new Library();

        String password = StringUtils.repeat('x',5);
        boolean actual = classUnderTest.login(password);

        assertTrue("login with valid pw", actual);
    }

    @Test
    public void shouldntLoginWithNullPassword() {
        Library classUnderTest = new Library();

        String password = null;
        boolean actual = classUnderTest.login(password);

        assertTrue("fail with invalid pw", actual);
    }

    @Test
    public void shouldReturnTrueForNegative() {
        Library classUnderTest = new Library();

        boolean actual = classUnderTest.isNegative(-1);

        assertTrue("is negative", actual);
    }

    @Test
    public void shouldReturnFalseForPositive() {
        Library classUnderTest = new Library();

        boolean actual = classUnderTest.isNegative(1);

        assertFalse("is negative", actual);
    }

    @Test
    public void testSomeLibraryMethod() {
        Library classUnderTest = new Library();
        assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
    }

    public void addShouldSumTwoNummbers() {
        Library classUnderTest = new Library();
        int expected = 5, num1 = 2, num2 = 3;
        int actual = classUnderTest.sum(num1, num2);
        assertTrue(message: "2+3 should = 5", condition: actual == 5);
    }
}
